"use strict";

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('antd')) : typeof define === 'function' && define.amd ? define(['react', 'antd'], factory) : (global = global || self, global.dashboard = factory(global.React, global.antd));
})(void 0, function (React, antd) {
  'use strict';

  var React__default = 'default' in React ? React['default'] : React;

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function unwrapExports(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var classnames = createCommonjsModule(function (module) {
    /*!
      Copyright (c) 2017 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */

    /* global define */
    (function () {
      var hasOwn = {}.hasOwnProperty;

      function classNames() {
        var classes = [];

        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg) continue;
          var argType = typeof arg;

          if (argType === 'string' || argType === 'number') {
            classes.push(arg);
          } else if (Array.isArray(arg) && arg.length) {
            var inner = classNames.apply(null, arg);

            if (inner) {
              classes.push(inner);
            }
          } else if (argType === 'object') {
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }

        return classes.join(' ');
      }

      if (module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else {
        window.classNames = classNames;
      }
    })();
  });
  var tinycolor = createCommonjsModule(function (module) {
    // TinyColor v1.4.1
    // https://github.com/bgrins/TinyColor
    // Brian Grinstead, MIT License
    (function (Math) {
      var trimLeft = /^\s+/,
          trimRight = /\s+$/,
          tinyCounter = 0,
          mathRound = Math.round,
          mathMin = Math.min,
          mathMax = Math.max,
          mathRandom = Math.random;

      function tinycolor(color, opts) {
        color = color ? color : '';
        opts = opts || {}; // If input is already a tinycolor, return itself

        if (color instanceof tinycolor) {
          return color;
        } // If we are called as a function, call using new instead


        if (!(this instanceof tinycolor)) {
          return new tinycolor(color, opts);
        }

        var rgb = inputToRGB(color);
        this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
        this._gradientType = opts.gradientType; // Don't let the range of [0,255] come back in [0,1].
        // Potentially lose a little bit of precision here, but will fix issues where
        // .5 gets interpreted as half of the total, instead of half of 1
        // If it was supposed to be 128, this was already taken care of by `inputToRgb`

        if (this._r < 1) {
          this._r = mathRound(this._r);
        }

        if (this._g < 1) {
          this._g = mathRound(this._g);
        }

        if (this._b < 1) {
          this._b = mathRound(this._b);
        }

        this._ok = rgb.ok;
        this._tc_id = tinyCounter++;
      }

      tinycolor.prototype = {
        isDark: function isDark() {
          return this.getBrightness() < 128;
        },
        isLight: function isLight() {
          return !this.isDark();
        },
        isValid: function isValid() {
          return this._ok;
        },
        getOriginalInput: function getOriginalInput() {
          return this._originalInput;
        },
        getFormat: function getFormat() {
          return this._format;
        },
        getAlpha: function getAlpha() {
          return this._a;
        },
        getBrightness: function getBrightness() {
          //http://www.w3.org/TR/AERT#color-contrast
          var rgb = this.toRgb();
          return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
        },
        getLuminance: function getLuminance() {
          //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
          var rgb = this.toRgb();
          var RsRGB, GsRGB, BsRGB, R, G, B;
          RsRGB = rgb.r / 255;
          GsRGB = rgb.g / 255;
          BsRGB = rgb.b / 255;

          if (RsRGB <= 0.03928) {
            R = RsRGB / 12.92;
          } else {
            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
          }

          if (GsRGB <= 0.03928) {
            G = GsRGB / 12.92;
          } else {
            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
          }

          if (BsRGB <= 0.03928) {
            B = BsRGB / 12.92;
          } else {
            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
          }

          return 0.2126 * R + 0.7152 * G + 0.0722 * B;
        },
        setAlpha: function setAlpha(value) {
          this._a = boundAlpha(value);
          this._roundA = mathRound(100 * this._a) / 100;
          return this;
        },
        toHsv: function toHsv() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          return {
            h: hsv.h * 360,
            s: hsv.s,
            v: hsv.v,
            a: this._a
          };
        },
        toHsvString: function toHsvString() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          var h = mathRound(hsv.h * 360),
              s = mathRound(hsv.s * 100),
              v = mathRound(hsv.v * 100);
          return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
        },
        toHsl: function toHsl() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          return {
            h: hsl.h * 360,
            s: hsl.s,
            l: hsl.l,
            a: this._a
          };
        },
        toHslString: function toHslString() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          var h = mathRound(hsl.h * 360),
              s = mathRound(hsl.s * 100),
              l = mathRound(hsl.l * 100);
          return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
        },
        toHex: function toHex(allow3Char) {
          return rgbToHex(this._r, this._g, this._b, allow3Char);
        },
        toHexString: function toHexString(allow3Char) {
          return '#' + this.toHex(allow3Char);
        },
        toHex8: function toHex8(allow4Char) {
          return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
        },
        toHex8String: function toHex8String(allow4Char) {
          return '#' + this.toHex8(allow4Char);
        },
        toRgb: function toRgb() {
          return {
            r: mathRound(this._r),
            g: mathRound(this._g),
            b: mathRound(this._b),
            a: this._a
          };
        },
        toRgbString: function toRgbString() {
          return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
        },
        toPercentageRgb: function toPercentageRgb() {
          return {
            r: mathRound(bound01(this._r, 255) * 100) + "%",
            g: mathRound(bound01(this._g, 255) * 100) + "%",
            b: mathRound(bound01(this._b, 255) * 100) + "%",
            a: this._a
          };
        },
        toPercentageRgbString: function toPercentageRgbString() {
          return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
        },
        toName: function toName() {
          if (this._a === 0) {
            return "transparent";
          }

          if (this._a < 1) {
            return false;
          }

          return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
        },
        toFilter: function toFilter(secondColor) {
          var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
          var secondHex8String = hex8String;
          var gradientType = this._gradientType ? "GradientType = 1, " : "";

          if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
          }

          return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
        },
        toString: function toString(format) {
          var formatSet = !!format;
          format = format || this._format;
          var formattedString = false;
          var hasAlpha = this._a < 1 && this._a >= 0;
          var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

          if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === "name" && this._a === 0) {
              return this.toName();
            }

            return this.toRgbString();
          }

          if (format === "rgb") {
            formattedString = this.toRgbString();
          }

          if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
          }

          if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
          }

          if (format === "hex3") {
            formattedString = this.toHexString(true);
          }

          if (format === "hex4") {
            formattedString = this.toHex8String(true);
          }

          if (format === "hex8") {
            formattedString = this.toHex8String();
          }

          if (format === "name") {
            formattedString = this.toName();
          }

          if (format === "hsl") {
            formattedString = this.toHslString();
          }

          if (format === "hsv") {
            formattedString = this.toHsvString();
          }

          return formattedString || this.toHexString();
        },
        clone: function clone() {
          return tinycolor(this.toString());
        },
        _applyModification: function _applyModification(fn, args) {
          var color = fn.apply(null, [this].concat([].slice.call(args)));
          this._r = color._r;
          this._g = color._g;
          this._b = color._b;
          this.setAlpha(color._a);
          return this;
        },
        lighten: function lighten() {
          return this._applyModification(_lighten, arguments);
        },
        brighten: function brighten() {
          return this._applyModification(_brighten, arguments);
        },
        darken: function darken() {
          return this._applyModification(_darken, arguments);
        },
        desaturate: function desaturate() {
          return this._applyModification(_desaturate, arguments);
        },
        saturate: function saturate() {
          return this._applyModification(_saturate, arguments);
        },
        greyscale: function greyscale() {
          return this._applyModification(_greyscale, arguments);
        },
        spin: function spin() {
          return this._applyModification(_spin, arguments);
        },
        _applyCombination: function _applyCombination(fn, args) {
          return fn.apply(null, [this].concat([].slice.call(args)));
        },
        analogous: function analogous() {
          return this._applyCombination(_analogous, arguments);
        },
        complement: function complement() {
          return this._applyCombination(_complement, arguments);
        },
        monochromatic: function monochromatic() {
          return this._applyCombination(_monochromatic, arguments);
        },
        splitcomplement: function splitcomplement() {
          return this._applyCombination(_splitcomplement, arguments);
        },
        triad: function triad() {
          return this._applyCombination(_triad, arguments);
        },
        tetrad: function tetrad() {
          return this._applyCombination(_tetrad, arguments);
        }
      }; // If input is an object, force 1 into "1.0" to handle ratios properly
      // String input requires "1.0" as input, so 1 will be treated as 1

      tinycolor.fromRatio = function (color, opts) {
        if (typeof color == "object") {
          var newColor = {};

          for (var i in color) {
            if (color.hasOwnProperty(i)) {
              if (i === "a") {
                newColor[i] = color[i];
              } else {
                newColor[i] = convertToPercentage(color[i]);
              }
            }
          }

          color = newColor;
        }

        return tinycolor(color, opts);
      }; // Given a string or object, convert that input to RGB
      // Possible string inputs:
      //
      //     "red"
      //     "#f00" or "f00"
      //     "#ff0000" or "ff0000"
      //     "#ff000000" or "ff000000"
      //     "rgb 255 0 0" or "rgb (255, 0, 0)"
      //     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
      //     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
      //     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
      //     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
      //     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
      //     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
      //


      function inputToRGB(color) {
        var rgb = {
          r: 0,
          g: 0,
          b: 0
        };
        var a = 1;
        var s = null;
        var v = null;
        var l = null;
        var ok = false;
        var format = false;

        if (typeof color == "string") {
          color = stringInputToObject(color);
        }

        if (typeof color == "object") {
          if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
          } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = "hsv";
          } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = "hsl";
          }

          if (color.hasOwnProperty("a")) {
            a = color.a;
          }
        }

        a = boundAlpha(a);
        return {
          ok: ok,
          format: color.format || format,
          r: mathMin(255, mathMax(rgb.r, 0)),
          g: mathMin(255, mathMax(rgb.g, 0)),
          b: mathMin(255, mathMax(rgb.b, 0)),
          a: a
        };
      } // Conversion Functions
      // --------------------
      // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
      // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
      // `rgbToRgb`
      // Handle bounds / percentage checking to conform to CSS color spec
      // <http://www.w3.org/TR/css3-color/>
      // *Assumes:* r, g, b in [0, 255] or [0, 1]
      // *Returns:* { r, g, b } in [0, 255]


      function rgbToRgb(r, g, b) {
        return {
          r: bound01(r, 255) * 255,
          g: bound01(g, 255) * 255,
          b: bound01(b, 255) * 255
        };
      } // `rgbToHsl`
      // Converts an RGB color value to HSL.
      // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
      // *Returns:* { h, s, l } in [0,1]


      function rgbToHsl(r, g, b) {
        r = bound01(r, 255);
        g = bound01(g, 255);
        b = bound01(b, 255);
        var max = mathMax(r, g, b),
            min = mathMin(r, g, b);
        var h,
            s,
            l = (max + min) / 2;

        if (max == min) {
          h = s = 0; // achromatic
        } else {
          var d = max - min;
          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

          switch (max) {
            case r:
              h = (g - b) / d + (g < b ? 6 : 0);
              break;

            case g:
              h = (b - r) / d + 2;
              break;

            case b:
              h = (r - g) / d + 4;
              break;
          }

          h /= 6;
        }

        return {
          h: h,
          s: s,
          l: l
        };
      } // `hslToRgb`
      // Converts an HSL color value to RGB.
      // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
      // *Returns:* { r, g, b } in the set [0, 255]


      function hslToRgb(h, s, l) {
        var r, g, b;
        h = bound01(h, 360);
        s = bound01(s, 100);
        l = bound01(l, 100);

        function hue2rgb(p, q, t) {
          if (t < 0) t += 1;
          if (t > 1) t -= 1;
          if (t < 1 / 6) return p + (q - p) * 6 * t;
          if (t < 1 / 2) return q;
          if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
          return p;
        }

        if (s === 0) {
          r = g = b = l; // achromatic
        } else {
          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
          var p = 2 * l - q;
          r = hue2rgb(p, q, h + 1 / 3);
          g = hue2rgb(p, q, h);
          b = hue2rgb(p, q, h - 1 / 3);
        }

        return {
          r: r * 255,
          g: g * 255,
          b: b * 255
        };
      } // `rgbToHsv`
      // Converts an RGB color value to HSV
      // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
      // *Returns:* { h, s, v } in [0,1]


      function rgbToHsv(r, g, b) {
        r = bound01(r, 255);
        g = bound01(g, 255);
        b = bound01(b, 255);
        var max = mathMax(r, g, b),
            min = mathMin(r, g, b);
        var h,
            s,
            v = max;
        var d = max - min;
        s = max === 0 ? 0 : d / max;

        if (max == min) {
          h = 0; // achromatic
        } else {
          switch (max) {
            case r:
              h = (g - b) / d + (g < b ? 6 : 0);
              break;

            case g:
              h = (b - r) / d + 2;
              break;

            case b:
              h = (r - g) / d + 4;
              break;
          }

          h /= 6;
        }

        return {
          h: h,
          s: s,
          v: v
        };
      } // `hsvToRgb`
      // Converts an HSV color value to RGB.
      // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
      // *Returns:* { r, g, b } in the set [0, 255]


      function hsvToRgb(h, s, v) {
        h = bound01(h, 360) * 6;
        s = bound01(s, 100);
        v = bound01(v, 100);
        var i = Math.floor(h),
            f = h - i,
            p = v * (1 - s),
            q = v * (1 - f * s),
            t = v * (1 - (1 - f) * s),
            mod = i % 6,
            r = [v, q, p, p, t, v][mod],
            g = [t, v, v, q, p, p][mod],
            b = [p, p, t, v, v, q][mod];
        return {
          r: r * 255,
          g: g * 255,
          b: b * 255
        };
      } // `rgbToHex`
      // Converts an RGB color to hex
      // Assumes r, g, and b are contained in the set [0, 255]
      // Returns a 3 or 6 character hex


      function rgbToHex(r, g, b, allow3Char) {
        var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; // Return a 3 character hex if possible

        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
          return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
        }

        return hex.join("");
      } // `rgbaToHex`
      // Converts an RGBA color plus alpha transparency to hex
      // Assumes r, g, b are contained in the set [0, 255] and
      // a in [0, 1]. Returns a 4 or 8 character rgba hex


      function rgbaToHex(r, g, b, a, allow4Char) {
        var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16)), pad2(convertDecimalToHex(a))]; // Return a 4 character hex if possible

        if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
          return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
        }

        return hex.join("");
      } // `rgbaToArgbHex`
      // Converts an RGBA color to an ARGB Hex8 string
      // Rarely used, but required for "toFilter()"


      function rgbaToArgbHex(r, g, b, a) {
        var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];
        return hex.join("");
      } // `equals`
      // Can be called with any tinycolor input


      tinycolor.equals = function (color1, color2) {
        if (!color1 || !color2) {
          return false;
        }

        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
      };

      tinycolor.random = function () {
        return tinycolor.fromRatio({
          r: mathRandom(),
          g: mathRandom(),
          b: mathRandom()
        });
      }; // Modification Functions
      // ----------------------
      // Thanks to less.js for some of the basics here
      // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>


      function _desaturate(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
      }

      function _saturate(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
      }

      function _greyscale(color) {
        return tinycolor(color).desaturate(100);
      }

      function _lighten(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
      }

      function _brighten(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var rgb = tinycolor(color).toRgb();
        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
        return tinycolor(rgb);
      }

      function _darken(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
      } // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
      // Values outside of this range will be wrapped into this range.


      function _spin(color, amount) {
        var hsl = tinycolor(color).toHsl();
        var hue = (hsl.h + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return tinycolor(hsl);
      } // Combination Functions
      // ---------------------
      // Thanks to jQuery xColor for some of the ideas behind these
      // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>


      function _complement(color) {
        var hsl = tinycolor(color).toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return tinycolor(hsl);
      }

      function _triad(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [tinycolor(color), tinycolor({
          h: (h + 120) % 360,
          s: hsl.s,
          l: hsl.l
        }), tinycolor({
          h: (h + 240) % 360,
          s: hsl.s,
          l: hsl.l
        })];
      }

      function _tetrad(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [tinycolor(color), tinycolor({
          h: (h + 90) % 360,
          s: hsl.s,
          l: hsl.l
        }), tinycolor({
          h: (h + 180) % 360,
          s: hsl.s,
          l: hsl.l
        }), tinycolor({
          h: (h + 270) % 360,
          s: hsl.s,
          l: hsl.l
        })];
      }

      function _splitcomplement(color) {
        var hsl = tinycolor(color).toHsl();
        var h = hsl.h;
        return [tinycolor(color), tinycolor({
          h: (h + 72) % 360,
          s: hsl.s,
          l: hsl.l
        }), tinycolor({
          h: (h + 216) % 360,
          s: hsl.s,
          l: hsl.l
        })];
      }

      function _analogous(color, results, slices) {
        results = results || 6;
        slices = slices || 30;
        var hsl = tinycolor(color).toHsl();
        var part = 360 / slices;
        var ret = [tinycolor(color)];

        for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {
          hsl.h = (hsl.h + part) % 360;
          ret.push(tinycolor(hsl));
        }

        return ret;
      }

      function _monochromatic(color, results) {
        results = results || 6;
        var hsv = tinycolor(color).toHsv();
        var h = hsv.h,
            s = hsv.s,
            v = hsv.v;
        var ret = [];
        var modification = 1 / results;

        while (results--) {
          ret.push(tinycolor({
            h: h,
            s: s,
            v: v
          }));
          v = (v + modification) % 1;
        }

        return ret;
      } // Utility Functions
      // ---------------------


      tinycolor.mix = function (color1, color2, amount) {
        amount = amount === 0 ? 0 : amount || 50;
        var rgb1 = tinycolor(color1).toRgb();
        var rgb2 = tinycolor(color2).toRgb();
        var p = amount / 100;
        var rgba = {
          r: (rgb2.r - rgb1.r) * p + rgb1.r,
          g: (rgb2.g - rgb1.g) * p + rgb1.g,
          b: (rgb2.b - rgb1.b) * p + rgb1.b,
          a: (rgb2.a - rgb1.a) * p + rgb1.a
        };
        return tinycolor(rgba);
      }; // Readability Functions
      // ---------------------
      // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
      // `contrast`
      // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)


      tinycolor.readability = function (color1, color2) {
        var c1 = tinycolor(color1);
        var c2 = tinycolor(color2);
        return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
      }; // `isReadable`
      // Ensure that foreground and background color combinations meet WCAG2 guidelines.
      // The third argument is an optional Object.
      //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
      //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
      // If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
      // *Example*
      //    tinycolor.isReadable("#000", "#111") => false
      //    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false


      tinycolor.isReadable = function (color1, color2, wcag2) {
        var readability = tinycolor.readability(color1, color2);
        var wcag2Parms, out;
        out = false;
        wcag2Parms = validateWCAG2Parms(wcag2);

        switch (wcag2Parms.level + wcag2Parms.size) {
          case "AAsmall":
          case "AAAlarge":
            out = readability >= 4.5;
            break;

          case "AAlarge":
            out = readability >= 3;
            break;

          case "AAAsmall":
            out = readability >= 7;
            break;
        }

        return out;
      }; // `mostReadable`
      // Given a base color and a list of possible foreground or background
      // colors for that base, returns the most readable color.
      // Optionally returns Black or White if the most readable color is unreadable.
      // *Example*
      //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
      //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
      //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
      //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"


      tinycolor.mostReadable = function (baseColor, colorList, args) {
        var bestColor = null;
        var bestScore = 0;
        var readability;
        var includeFallbackColors, level, size;
        args = args || {};
        includeFallbackColors = args.includeFallbackColors;
        level = args.level;
        size = args.size;

        for (var i = 0; i < colorList.length; i++) {
          readability = tinycolor.readability(baseColor, colorList[i]);

          if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
          }
        }

        if (tinycolor.isReadable(baseColor, bestColor, {
          "level": level,
          "size": size
        }) || !includeFallbackColors) {
          return bestColor;
        } else {
          args.includeFallbackColors = false;
          return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
        }
      }; // Big List of Colors
      // ------------------
      // <http://www.w3.org/TR/css3-color/#svg-color>


      var names = tinycolor.names = {
        aliceblue: "f0f8ff",
        antiquewhite: "faebd7",
        aqua: "0ff",
        aquamarine: "7fffd4",
        azure: "f0ffff",
        beige: "f5f5dc",
        bisque: "ffe4c4",
        black: "000",
        blanchedalmond: "ffebcd",
        blue: "00f",
        blueviolet: "8a2be2",
        brown: "a52a2a",
        burlywood: "deb887",
        burntsienna: "ea7e5d",
        cadetblue: "5f9ea0",
        chartreuse: "7fff00",
        chocolate: "d2691e",
        coral: "ff7f50",
        cornflowerblue: "6495ed",
        cornsilk: "fff8dc",
        crimson: "dc143c",
        cyan: "0ff",
        darkblue: "00008b",
        darkcyan: "008b8b",
        darkgoldenrod: "b8860b",
        darkgray: "a9a9a9",
        darkgreen: "006400",
        darkgrey: "a9a9a9",
        darkkhaki: "bdb76b",
        darkmagenta: "8b008b",
        darkolivegreen: "556b2f",
        darkorange: "ff8c00",
        darkorchid: "9932cc",
        darkred: "8b0000",
        darksalmon: "e9967a",
        darkseagreen: "8fbc8f",
        darkslateblue: "483d8b",
        darkslategray: "2f4f4f",
        darkslategrey: "2f4f4f",
        darkturquoise: "00ced1",
        darkviolet: "9400d3",
        deeppink: "ff1493",
        deepskyblue: "00bfff",
        dimgray: "696969",
        dimgrey: "696969",
        dodgerblue: "1e90ff",
        firebrick: "b22222",
        floralwhite: "fffaf0",
        forestgreen: "228b22",
        fuchsia: "f0f",
        gainsboro: "dcdcdc",
        ghostwhite: "f8f8ff",
        gold: "ffd700",
        goldenrod: "daa520",
        gray: "808080",
        green: "008000",
        greenyellow: "adff2f",
        grey: "808080",
        honeydew: "f0fff0",
        hotpink: "ff69b4",
        indianred: "cd5c5c",
        indigo: "4b0082",
        ivory: "fffff0",
        khaki: "f0e68c",
        lavender: "e6e6fa",
        lavenderblush: "fff0f5",
        lawngreen: "7cfc00",
        lemonchiffon: "fffacd",
        lightblue: "add8e6",
        lightcoral: "f08080",
        lightcyan: "e0ffff",
        lightgoldenrodyellow: "fafad2",
        lightgray: "d3d3d3",
        lightgreen: "90ee90",
        lightgrey: "d3d3d3",
        lightpink: "ffb6c1",
        lightsalmon: "ffa07a",
        lightseagreen: "20b2aa",
        lightskyblue: "87cefa",
        lightslategray: "789",
        lightslategrey: "789",
        lightsteelblue: "b0c4de",
        lightyellow: "ffffe0",
        lime: "0f0",
        limegreen: "32cd32",
        linen: "faf0e6",
        magenta: "f0f",
        maroon: "800000",
        mediumaquamarine: "66cdaa",
        mediumblue: "0000cd",
        mediumorchid: "ba55d3",
        mediumpurple: "9370db",
        mediumseagreen: "3cb371",
        mediumslateblue: "7b68ee",
        mediumspringgreen: "00fa9a",
        mediumturquoise: "48d1cc",
        mediumvioletred: "c71585",
        midnightblue: "191970",
        mintcream: "f5fffa",
        mistyrose: "ffe4e1",
        moccasin: "ffe4b5",
        navajowhite: "ffdead",
        navy: "000080",
        oldlace: "fdf5e6",
        olive: "808000",
        olivedrab: "6b8e23",
        orange: "ffa500",
        orangered: "ff4500",
        orchid: "da70d6",
        palegoldenrod: "eee8aa",
        palegreen: "98fb98",
        paleturquoise: "afeeee",
        palevioletred: "db7093",
        papayawhip: "ffefd5",
        peachpuff: "ffdab9",
        peru: "cd853f",
        pink: "ffc0cb",
        plum: "dda0dd",
        powderblue: "b0e0e6",
        purple: "800080",
        rebeccapurple: "663399",
        red: "f00",
        rosybrown: "bc8f8f",
        royalblue: "4169e1",
        saddlebrown: "8b4513",
        salmon: "fa8072",
        sandybrown: "f4a460",
        seagreen: "2e8b57",
        seashell: "fff5ee",
        sienna: "a0522d",
        silver: "c0c0c0",
        skyblue: "87ceeb",
        slateblue: "6a5acd",
        slategray: "708090",
        slategrey: "708090",
        snow: "fffafa",
        springgreen: "00ff7f",
        steelblue: "4682b4",
        tan: "d2b48c",
        teal: "008080",
        thistle: "d8bfd8",
        tomato: "ff6347",
        turquoise: "40e0d0",
        violet: "ee82ee",
        wheat: "f5deb3",
        white: "fff",
        whitesmoke: "f5f5f5",
        yellow: "ff0",
        yellowgreen: "9acd32"
      }; // Make it easy to access colors via `hexNames[hex]`

      var hexNames = tinycolor.hexNames = flip(names); // Utilities
      // ---------
      // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`

      function flip(o) {
        var flipped = {};

        for (var i in o) {
          if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
          }
        }

        return flipped;
      } // Return a valid alpha value [0,1] with all invalid values being set to 1


      function boundAlpha(a) {
        a = parseFloat(a);

        if (isNaN(a) || a < 0 || a > 1) {
          a = 1;
        }

        return a;
      } // Take input from [0, n] and return it as [0, 1]


      function bound01(n, max) {
        if (isOnePointZero(n)) {
          n = "100%";
        }

        var processPercent = isPercentage(n);
        n = mathMin(max, mathMax(0, parseFloat(n))); // Automatically convert percentage into number

        if (processPercent) {
          n = parseInt(n * max, 10) / 100;
        } // Handle floating point rounding errors


        if (Math.abs(n - max) < 0.000001) {
          return 1;
        } // Convert into [0, 1] range if it isn't already


        return n % max / parseFloat(max);
      } // Force a number between 0 and 1


      function clamp01(val) {
        return mathMin(1, mathMax(0, val));
      } // Parse a base-16 hex value into a base-10 integer


      function parseIntFromHex(val) {
        return parseInt(val, 16);
      } // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
      // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>


      function isOnePointZero(n) {
        return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
      } // Check to see if string passed in is a percentage


      function isPercentage(n) {
        return typeof n === "string" && n.indexOf('%') != -1;
      } // Force a hex value to have 2 characters


      function pad2(c) {
        return c.length == 1 ? '0' + c : '' + c;
      } // Replace a decimal with it's percentage value


      function convertToPercentage(n) {
        if (n <= 1) {
          n = n * 100 + "%";
        }

        return n;
      } // Converts a decimal to a hex value


      function convertDecimalToHex(d) {
        return Math.round(parseFloat(d) * 255).toString(16);
      } // Converts a hex value to a decimal


      function convertHexToDecimal(h) {
        return parseIntFromHex(h) / 255;
      }

      var matchers = function () {
        // <http://www.w3.org/TR/css3-values/#integers>
        var CSS_INTEGER = "[-\\+]?\\d+%?"; // <http://www.w3.org/TR/css3-values/#number-value>

        var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?"; // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.

        var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")"; // Actual matching.
        // Parentheses and commas are optional, but not required.
        // Whitespace can take the place of commas or opening paren

        var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        return {
          CSS_UNIT: new RegExp(CSS_UNIT),
          rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
          rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
          hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
          hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
          hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
          hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
          hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
          hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
        };
      }(); // `isValidCSSUnit`
      // Take in a single string / number and check to see if it looks like a CSS unit
      // (see `matchers` above for definition).


      function isValidCSSUnit(color) {
        return !!matchers.CSS_UNIT.exec(color);
      } // `stringInputToObject`
      // Permissive string parsing.  Take in a number of formats, and output an object
      // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`


      function stringInputToObject(color) {
        color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();
        var named = false;

        if (names[color]) {
          color = names[color];
          named = true;
        } else if (color == 'transparent') {
          return {
            r: 0,
            g: 0,
            b: 0,
            a: 0,
            format: "name"
          };
        } // Try to match string input using regular expressions.
        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
        // Just return an object and let the conversion functions handle that.
        // This way the result will be the same whether the tinycolor is initialized with string or object.


        var match;

        if (match = matchers.rgb.exec(color)) {
          return {
            r: match[1],
            g: match[2],
            b: match[3]
          };
        }

        if (match = matchers.rgba.exec(color)) {
          return {
            r: match[1],
            g: match[2],
            b: match[3],
            a: match[4]
          };
        }

        if (match = matchers.hsl.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            l: match[3]
          };
        }

        if (match = matchers.hsla.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            l: match[3],
            a: match[4]
          };
        }

        if (match = matchers.hsv.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            v: match[3]
          };
        }

        if (match = matchers.hsva.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            v: match[3],
            a: match[4]
          };
        }

        if (match = matchers.hex8.exec(color)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
          };
        }

        if (match = matchers.hex6.exec(color)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
          };
        }

        if (match = matchers.hex4.exec(color)) {
          return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            a: convertHexToDecimal(match[4] + '' + match[4]),
            format: named ? "name" : "hex8"
          };
        }

        if (match = matchers.hex3.exec(color)) {
          return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: named ? "name" : "hex"
          };
        }

        return false;
      }

      function validateWCAG2Parms(parms) {
        // return valid WCAG2 parms for isReadable.
        // If input parms are invalid, return {"level":"AA", "size":"small"}
        var level, size;
        parms = parms || {
          "level": "AA",
          "size": "small"
        };
        level = (parms.level || "AA").toUpperCase();
        size = (parms.size || "small").toLowerCase();

        if (level !== "AA" && level !== "AAA") {
          level = "AA";
        }

        if (size !== "small" && size !== "large") {
          size = "small";
        }

        return {
          "level": level,
          "size": size
        };
      } // Node: Export function


      if (module.exports) {
        module.exports = tinycolor;
      } // AMD/requirejs: Define the module
      else {
          window.tinycolor = tinycolor;
        }
    })(Math);
  });
  var generate_1 = createCommonjsModule(function (module, exports) {
    var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var tinycolor2_1 = __importDefault(tinycolor);

    var hueStep = 2; // 色相阶梯

    var saturationStep = 16; // 饱和度阶梯，浅色部分

    var saturationStep2 = 5; // 饱和度阶梯，深色部分

    var brightnessStep1 = 5; // 亮度阶梯，浅色部分

    var brightnessStep2 = 15; // 亮度阶梯，深色部分

    var lightColorCount = 5; // 浅色数量，主色上

    var darkColorCount = 4; // 深色数量，主色下

    function getHue(hsv, i, light) {
      var hue; // 根据色相不同，色相转向不同

      if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
      } else {
        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
      }

      if (hue < 0) {
        hue += 360;
      } else if (hue >= 360) {
        hue -= 360;
      }

      return hue;
    }

    function getSaturation(hsv, i, light) {
      // grey color don't change saturation
      if (hsv.h === 0 && hsv.s === 0) {
        return hsv.s;
      }

      var saturation;

      if (light) {
        saturation = Math.round(hsv.s * 100) - saturationStep * i;
      } else if (i === darkColorCount) {
        saturation = Math.round(hsv.s * 100) + saturationStep;
      } else {
        saturation = Math.round(hsv.s * 100) + saturationStep2 * i;
      } // 边界值修正


      if (saturation > 100) {
        saturation = 100;
      } // 第一格的 s 限制在 6-10 之间


      if (light && i === lightColorCount && saturation > 10) {
        saturation = 10;
      }

      if (saturation < 6) {
        saturation = 6;
      }

      return saturation;
    }

    function getValue(hsv, i, light) {
      if (light) {
        return Math.round(hsv.v * 100) + brightnessStep1 * i;
      }

      return Math.round(hsv.v * 100) - brightnessStep2 * i;
    }

    function generate(color) {
      var patterns = [];
      var pColor = tinycolor2_1.default(color);

      for (var i = lightColorCount; i > 0; i -= 1) {
        var hsv = pColor.toHsv();
        var colorString = tinycolor2_1.default({
          h: getHue(hsv, i, true),
          s: getSaturation(hsv, i, true),
          v: getValue(hsv, i, true)
        }).toHexString();
        patterns.push(colorString);
      }

      patterns.push(pColor.toHexString());

      for (var i = 1; i <= darkColorCount; i += 1) {
        var hsv = pColor.toHsv();
        var colorString = tinycolor2_1.default({
          h: getHue(hsv, i),
          s: getSaturation(hsv, i),
          v: getValue(hsv, i)
        }).toHexString();
        patterns.push(colorString);
      }

      return patterns;
    }

    exports.default = generate;
  });
  unwrapExports(generate_1);
  var lib = createCommonjsModule(function (module, exports) {
    var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var generate_1$1 = __importDefault(generate_1);

    exports.generate = generate_1$1.default;
    var presetPrimaryColors = {
      red: '#F5222D',
      volcano: '#FA541C',
      orange: '#FA8C16',
      gold: '#FAAD14',
      yellow: '#FADB14',
      lime: '#A0D911',
      green: '#52C41A',
      cyan: '#13C2C2',
      blue: '#1890FF',
      geekblue: '#2F54EB',
      purple: '#722ED1',
      magenta: '#EB2F96',
      grey: '#666666'
    };
    exports.presetPrimaryColors = presetPrimaryColors;
    var presetPalettes = {};
    exports.presetPalettes = presetPalettes;
    Object.keys(presetPrimaryColors).forEach(function (key) {
      presetPalettes[key] = generate_1$1.default(presetPrimaryColors[key]);
      presetPalettes[key].primary = presetPalettes[key][6];
    });
    var red = presetPalettes.red;
    exports.red = red;
    var volcano = presetPalettes.volcano;
    exports.volcano = volcano;
    var gold = presetPalettes.gold;
    exports.gold = gold;
    var orange = presetPalettes.orange;
    exports.orange = orange;
    var yellow = presetPalettes.yellow;
    exports.yellow = yellow;
    var lime = presetPalettes.lime;
    exports.lime = lime;
    var green = presetPalettes.green;
    exports.green = green;
    var cyan = presetPalettes.cyan;
    exports.cyan = cyan;
    var blue = presetPalettes.blue;
    exports.blue = blue;
    var geekblue = presetPalettes.geekblue;
    exports.geekblue = geekblue;
    var purple = presetPalettes.purple;
    exports.purple = purple;
    var magenta = presetPalettes.magenta;
    exports.magenta = magenta;
    var grey = presetPalettes.grey;
    exports.grey = grey;
  });
  unwrapExports(lib);
  var lib_1 = lib.generate;
  var lib_2 = lib.presetPrimaryColors;
  var lib_3 = lib.presetPalettes;
  var lib_4 = lib.red;
  var lib_5 = lib.volcano;
  var lib_6 = lib.gold;
  var lib_7 = lib.orange;
  var lib_8 = lib.yellow;
  var lib_9 = lib.lime;
  var lib_10 = lib.green;
  var lib_11 = lib.cyan;
  var lib_12 = lib.blue;
  var lib_13 = lib.geekblue;
  var lib_14 = lib.purple;
  var lib_15 = lib.magenta;
  var lib_16 = lib.grey;
  /* eslint-disable no-console */

  var warned = {};

  function warning(valid, message) {
    // Support uglify
    if (!valid && console !== undefined) {
      console.error("Warning: ".concat(message));
    }
  }

  function call(method, valid, message) {
    if (!valid && !warned[message]) {
      method(false, message);
      warned[message] = true;
    }
  }

  function warningOnce(valid, message) {
    call(warning, valid, message);
  }
  /* eslint-enable */


  var containers = []; // will store container HTMLElement references

  var styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}

  var usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';

  function insertCss(css, options) {
    options = options || {};

    if (css === undefined) {
      throw new Error(usage);
    }

    var position = options.prepend === true ? 'prepend' : 'append';
    var container = options.container !== undefined ? options.container : document.querySelector('head');
    var containerId = containers.indexOf(container); // first time we see this container, create the necessary entries

    if (containerId === -1) {
      containerId = containers.push(container) - 1;
      styleElements[containerId] = {};
    } // try to get the correponding container + position styleElement, create it otherwise


    var styleElement;

    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {
      styleElement = styleElements[containerId][position];
    } else {
      styleElement = styleElements[containerId][position] = createStyleElement();

      if (position === 'prepend') {
        container.insertBefore(styleElement, container.childNodes[0]);
      } else {
        container.appendChild(styleElement);
      }
    } // strip potential UTF-8 BOM if css was read from a file


    if (css.charCodeAt(0) === 0xFEFF) {
      css = css.substr(1, css.length);
    } // actually add the stylesheet


    if (styleElement.styleSheet) {
      styleElement.styleSheet.cssText += css;
    } else {
      styleElement.textContent += css;
    }

    return styleElement;
  }

  function createStyleElement() {
    var styleElement = document.createElement('style');
    styleElement.setAttribute('type', 'text/css');
    return styleElement;
  }

  var insertCss_1 = insertCss;
  var insertCss_2 = insertCss;
  insertCss_1.insertCss = insertCss_2;

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(source, true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function warning$1(valid, message) {
    warningOnce(valid, "[@ant-design/icons] ".concat(message));
  }

  function isIconDefinition(target) {
    return _typeof(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (_typeof(target.icon) === 'object' || typeof target.icon === 'function');
  }

  function normalizeAttrs() {
    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return Object.keys(attrs).reduce(function (acc, key) {
      var val = attrs[key];

      switch (key) {
        case 'class':
          acc.className = val;
          delete acc.class;
          break;

        default:
          acc[key] = val;
      }

      return acc;
    }, {});
  }

  function generate(node, key, rootProps) {
    if (!rootProps) {
      return React__default.createElement(node.tag, _objectSpread({
        key: key
      }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {
        return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
      }));
    }

    return React__default.createElement(node.tag, _objectSpread({
      key: key
    }, normalizeAttrs(node.attrs), {}, rootProps), (node.children || []).map(function (child, index) {
      return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
    }));
  }

  function getSecondaryColor(primaryColor) {
    // choose the second color
    return lib_1(primaryColor)[0];
  } // These props make sure that the SVG behaviours like general text.


  var iconStyles = "\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
  var cssInjectedFlag = false;

  var useInsertStyles = function useInsertStyles() {
    var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;
    React.useEffect(function () {
      if (!cssInjectedFlag) {
        insertCss_2(styleStr);
        cssInjectedFlag = true;
      }
    }, []);
  };

  function _objectWithoutProperties$1(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose$1(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose$1(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function ownKeys$1(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread$1(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys$1(source, true).forEach(function (key) {
          _defineProperty$1(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys$1(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _defineProperty$1(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var twoToneColorPalette = {
    primaryColor: '#333',
    secondaryColor: '#E6E6E6'
  };

  function setTwoToneColors(_ref) {
    var primaryColor = _ref.primaryColor,
        secondaryColor = _ref.secondaryColor;
    twoToneColorPalette.primaryColor = primaryColor;
    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);
  }

  function getTwoToneColors() {
    return _objectSpread$1({}, twoToneColorPalette);
  }

  var IconBase = function IconBase(props) {
    var icon = props.icon,
        className = props.className,
        onClick = props.onClick,
        style = props.style,
        primaryColor = props.primaryColor,
        secondaryColor = props.secondaryColor,
        restProps = _objectWithoutProperties$1(props, ["icon", "className", "onClick", "style", "primaryColor", "secondaryColor"]);

    var colors = twoToneColorPalette;

    if (primaryColor) {
      colors = {
        primaryColor: primaryColor,
        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)
      };
    }

    useInsertStyles();
    warning$1(isIconDefinition(icon), "icon should be icon definiton, but got ".concat(icon));

    if (!isIconDefinition(icon)) {
      return null;
    }

    var target = icon;

    if (target && typeof target.icon === 'function') {
      target = _objectSpread$1({}, target, {
        icon: target.icon(colors.primaryColor, colors.secondaryColor)
      });
    }

    return generate(target.icon, "svg-".concat(target.name), _objectSpread$1({
      className: className,
      onClick: onClick,
      style: style,
      'data-icon': target.name,
      width: '1em',
      height: '1em',
      fill: 'currentColor',
      'aria-hidden': 'true'
    }, restProps));
  };

  IconBase.displayName = 'IconReact';
  IconBase.getTwoToneColors = getTwoToneColors;
  IconBase.setTwoToneColors = setTwoToneColors;

  function setTwoToneColor(primaryColor) {
    return IconBase.setTwoToneColors({
      primaryColor: primaryColor
    });
  }

  function getTwoToneColor() {
    var colors = IconBase.getTwoToneColors();
    return colors.primaryColor;
  }

  function _defineProperty$2(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _objectWithoutProperties$2(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose$2(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose$2(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  setTwoToneColor('#1890ff');

  var Icon = function Icon(props) {
    var className = props.className,
        icon = props.icon,
        spin = props.spin,
        rotate = props.rotate,
        tabIndex = props.tabIndex,
        onClick = props.onClick,
        twoToneColor = props.twoToneColor,
        restProps = _objectWithoutProperties$2(props, ["className", "icon", "spin", "rotate", "tabIndex", "onClick", "twoToneColor"]);

    var classString = classnames('anticon', _defineProperty$2({}, "anticon-".concat(icon.name), Boolean(icon.name)), className);
    var svgClassString = classnames({
      'anticon-spin': !!spin || icon.name === 'loading'
    });
    var iconTabIndex = tabIndex;

    if (iconTabIndex === undefined && onClick) {
      iconTabIndex = -1;
    }

    var svgStyle = rotate ? {
      msTransform: "rotate(".concat(rotate, "deg)"),
      transform: "rotate(".concat(rotate, "deg)")
    } : undefined;
    return React__default.createElement("span", Object.assign({
      role: "img",
      "aria-label": icon.name
    }, restProps, {
      tabIndex: iconTabIndex,
      onClick: onClick,
      className: classString
    }), React__default.createElement(IconBase, {
      className: svgClassString,
      icon: icon,
      primaryColor: twoToneColor,
      style: svgStyle
    }));
  };

  Icon.displayName = 'AntdIcon';
  Icon.getTwoToneColor = getTwoToneColor;
  Icon.setTwoToneColor = setTwoToneColor; // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js

  var SmileOutline_1 = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var SmileOutline = {
      name: 'smile',
      theme: 'outline',
      icon: {
        tag: 'svg',
        attrs: {
          viewBox: '64 64 896 896',
          focusable: 'false'
        },
        children: [{
          tag: 'path',
          attrs: {
            d: 'M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z'
          }
        }]
      }
    };
    exports.default = SmileOutline;
  });
  var SmileOutlineSvg = unwrapExports(SmileOutline_1); // GENERATE BY ./scripts/generateIcons.js

  var Smile = function Smile(props) {
    return React__default.createElement(Icon, Object.assign({}, props, {
      icon: SmileOutlineSvg
    }));
  }; // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js
  // GENERATE BY ./scripts/generateIcons.js


  function styleInject(css, ref) {
    if (ref === void 0) ref = {};
    var insertAt = ref.insertAt;

    if (!css || typeof document === 'undefined') {
      return;
    }

    var head = document.head || document.getElementsByTagName('head')[0];
    var style = document.createElement('style');
    style.type = 'text/css';

    if (insertAt === 'top') {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }

    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }

  var css = ".ui-module_container__DScfm {\n  padding: 20px;\n  height: 100%;\n  overflow: auto;\n}\n.ui-module_container__DScfm .ui-module_card__UZGik {\n  margin-bottom: 16px;\n  min-width: 282px;\n}\n.ui-module_close__3Kb-g {\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n}\n.ui-module_close__3Kb-g:hover {\n  color: rgba(255, 255, 255, 0.85);\n}\n.ui-module_card__UZGik .ant-card-head {\n  border-bottom: none;\n}\n.ui-module_card-action__VAhjR .ant-card-head-title {\n  padding: 26px 0;\n}\n.ui-module_card-action__VAhjR .ant-card-body {\n  border-top: 1px solid #1d1d26;\n  text-align: center;\n  padding: 0;\n  cursor: pointer;\n  color: rgba(255, 255, 255, 0.65);\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n}\n.ui-module_card-action__VAhjR .ant-card-body:hover {\n  background-color: #383847;\n}\n.ui-module_card-action__VAhjR .ant-card-body > div {\n  padding: 16px 0;\n}\n.ui-module_main__1V1WC {\n  display: -webkit-box;\n  display: flex;\n}\n.ui-module_main__1V1WC p {\n  font-size: 12px;\n}\n.ui-module_icon__2y9pQ {\n  width: 48px;\n  height: 48px;\n  border-radius: 3px;\n  margin-right: 12px;\n}\n.ui-module_icon__2y9pQ h4 {\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.85);\n  line-height: 22px;\n  margin-bottom: 4px;\n}\n.ui-module_icon__2y9pQ p {\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.45);\n  line-height: 20px;\n}\n.ui-module_icon__2y9pQ.ui-module_build__26Wg0 {\n  background: url('https://gw.alipayobjects.com/zos/basement_prod/6000d285-334d-4513-a405-2d9f890f56e9.svg');\n  background-size: contain;\n  background-position: center;\n}\n.ui-module_icon__2y9pQ.ui-module_dev__2eSfA {\n  background: url('https://gw.alipayobjects.com/zos/basement_prod/6000d285-334d-4513-a405-2d9f890f56e9.svg');\n  background-size: contain;\n  background-position: center;\n}\n.ui-module_future__izUtE {\n  margin: 26px auto;\n  text-align: center;\n}\n.ui-module_future__izUtE div {\n  margin-bottom: 7px;\n  font-size: 16px;\n}\n.ui-module_future__izUtE p {\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.65);\n  line-height: 22px;\n}\n.ui-module_welcome__1hCM6 .ant-card-body {\n  padding: 24px;\n}\n.ui-module_welcome__1hCM6 .ant-card-body h2 {\n  font-size: 24px;\n  color: #fff;\n  line-height: 32px;\n  margin-bottom: 24px;\n}\n.ui-module_welcome__1hCM6 .ant-card-body p {\n  font-size: 24px;\n  color: #fff;\n  line-height: 32px;\n  margin-bottom: 72px;\n}\n.ui-module_welcome__1hCM6 .ant-card-body div {\n  font-size: 14px;\n  color: rgba(255, 252, 252, 0.65);\n  line-height: 22px;\n}\n.isMini .ant-card-body h2 {\n  margin-bottom: 4px;\n  font-size: 16px;\n  line-height: 24px;\n}\n.isMini .ant-card-body p {\n  margin-bottom: 8px;\n  font-size: 16px;\n  line-height: 24px;\n}\n.isMini .ant-card-body div {\n  font-size: 12px;\n}\n";
  var styles = {
    "container": "ui-module_container__DScfm",
    "card": "ui-module_card__UZGik",
    "close": "ui-module_close__3Kb-g",
    "card-action": "ui-module_card-action__VAhjR",
    "main": "ui-module_main__1V1WC",
    "icon": "ui-module_icon__2y9pQ",
    "build": "ui-module_build__26Wg0",
    "dev": "ui-module_dev__2eSfA",
    "future": "ui-module_future__izUtE",
    "welcome": "ui-module_welcome__1hCM6"
  };
  styleInject(css);
  var useState = React__default.useState,
      useRef = React__default.useRef,
      useEffect = React__default.useEffect;

  var DashboardUI = function DashboardUI(props) {
    // TODO react-grid-layout to custom layout
    var isClosed = window.localStorage.getItem('umi_ui_dashboard_welcome') || false;

    var _useState = useState(!!isClosed),
        _useState2 = _slicedToArray(_useState, 2),
        closed = _useState2[0],
        setClosed = _useState2[1];

    var api = props.api;
    var redirect = api.redirect,
        currentProject = api.currentProject,
        _ = api._,
        intl = api.intl,
        getBasicUI = api.getBasicUI;
    var FormattedMessage = intl.FormattedMessage;
    var actionCardCls = classnames(styles.card, styles['card-action']);
    var welcomeCardCls = classnames(styles.card, styles.welcome);
    var basicUI = getBasicUI();
    var actionCards = [{
      className: actionCardCls,
      title: React__default.createElement("div", {
        className: styles.main
      }, React__default.createElement("div", {
        className: classnames(styles.icon, styles.dev)
      }), React__default.createElement("div", {
        className: styles.info
      }, React__default.createElement("h4", null, intl({
        id: 'org.umi.ui.dashboard.panel.dev.title'
      })), React__default.createElement("p", null, intl({
        id: 'org.umi.ui.dashboard.panel.dev.desc'
      })))),
      body: React__default.createElement("div", {
        onClick: function onClick() {
          return redirect('/tasks');
        }
      }, React__default.createElement(FormattedMessage, {
        id: "org.umi.ui.dashboard.panel.goto.task"
      }))
    }, {
      className: actionCardCls,
      title: React__default.createElement("div", {
        className: styles.main
      }, React__default.createElement("div", {
        className: classnames(styles.icon, styles.build)
      }), React__default.createElement("div", {
        className: styles.info
      }, React__default.createElement("h4", null, intl({
        id: 'org.umi.ui.dashboard.panel.build.title'
      })), React__default.createElement("p", null, intl({
        id: 'org.umi.ui.dashboard.panel.build.desc'
      })))),
      body: React__default.createElement("div", {
        onClick: function onClick() {
          return redirect('/tasks?active=build');
        }
      }, intl({
        id: 'org.umi.ui.dashboard.panel.goto.task'
      }))
    }, {
      className: actionCardCls,
      title: React__default.createElement("div", {
        className: styles.future
      }, React__default.createElement("div", null, React__default.createElement(Smile, null)), React__default.createElement("p", null, intl({
        id: 'org.umi.ui.dashboard.panel.coming.soon'
      })))
    }];

    if (!closed) {
      actionCards.unshift({
        className: welcomeCardCls,
        size: 'small',
        // extra: <Close className={styles.close} onClick={handleClose} />,
        body: React__default.createElement("div", null, React__default.createElement("h2", null, "Hi"), React__default.createElement("p", null, intl({
          id: 'org.umi.ui.dashboard.panel.welcome.title'
        }, {
          name: currentProject.name
        })), React__default.createElement("div", null, React__default.createElement("a", {
          href: "https://umijs.org/guide/umi-ui.html",
          target: "_blank",
          rel: "noopener noreferrer"
        }, basicUI.name || 'Umi', " UI"), intl({
          id: 'org.umi.ui.dashboard.panel.welcome.desc'
        })))
      });
    }

    return React__default.createElement("div", {
      className: styles.container
    }, React__default.createElement(antd.Row, {
      className: styles['container-row'],
      type: "flex",
      gutter: 24
    }, actionCards.map(function (card, i) {
      var className = card.className,
          body = card.body,
          restProps = _objectWithoutProperties(card, ["className", "body"]);

      return React__default.createElement(antd.Col, {
        key: i.toString(),
        className: className,
        xs: 12,
        sm: 12,
        md: 12,
        lg: 12,
        xl: 6
      }, React__default.createElement(antd.Card, Object.assign({
        className: styles.card,
        bordered: false,
        hoverable: false,
        children: body
      }, restProps)));
    })));
  };

  var zhCN = {
    'org.umi.ui.dashboard.panel': '总览',
    'org.umi.ui.dashboard.launch.editor': '打开编辑器',
    'org.umi.ui.dashboard.panel.welcome.title': '欢迎来到 {name} 项目',
    'org.umi.ui.dashboard.panel.welcome.desc': ' 是蚂蚁金服全新一代 GUI 开发方式，通过 web 交互的方式对项目进行开发、管理，达到提升研发效率的目的。',
    'org.umi.ui.dashboard.panel.welcome.bigfish.desc': ' 是蚂蚁金服全新一代 GUI 开发方式，通过 web 交互的方式对项目进行开发、管理，达到提升研发效率的目的。',
    'org.umi.ui.dashboard.panel.dev.title': '本地启动',
    'org.umi.ui.dashboard.panel.dev.desc': '编译和热更新',
    'org.umi.ui.dashboard.panel.build.title': '构建',
    'org.umi.ui.dashboard.panel.build.desc': '编译并压缩',
    'org.umi.ui.dashboard.panel.goto.task': '前往任务页面',
    'org.umi.ui.dashboard.panel.coming.soon': '敬请期待'
  };
  var enUS = {
    'org.umi.ui.dashboard.panel': 'Dashboard',
    'org.umi.ui.dashboard.launch.editor': 'Launch Editor',
    'org.umi.ui.dashboard.panel.welcome.title': 'Welcome to {name} project',
    'org.umi.ui.dashboard.panel.welcome.desc': ' is a new generation of GUI development method for Ant Financial, which develops and manages projects through web interaction to achieve the goal of improving R&D efficiency.',
    'org.umi.ui.dashboard.panel.dev.title': 'Run Dev',
    'org.umi.ui.dashboard.panel.welcome.bigfish.desc': ' is a new generation of GUI development method for Ant Financial, which develops and manages projects through web interaction to achieve the goal of improving R&D efficiency.',
    'org.umi.ui.dashboard.panel.dev.desc': 'Compile and HMR',
    'org.umi.ui.dashboard.panel.build.title': 'Run Build',
    'org.umi.ui.dashboard.panel.build.desc': 'Compile and compress',
    'org.umi.ui.dashboard.panel.goto.task': 'Go To Task',
    'org.umi.ui.dashboard.panel.coming.soon': 'Coming Soon'
  };

  var ui = function ui(api) {
    var intl = api.intl;
    var FormattedMessage = intl.FormattedMessage;

    var ConfigAction = function ConfigAction(_ref) {
      var api = _ref.api;
      return React__default.createElement(antd.Button, {
        onClick: function onClick() {
          api.launchEditor({
            type: 'project'
          });
        },
        type: "default"
      }, React__default.createElement(FormattedMessage, {
        id: "org.umi.ui.dashboard.launch.editor"
      }));
    };

    api.addLocales({
      'zh-CN': zhCN,
      'en-US': enUS
    });
    api.addPanel({
      title: 'org.umi.ui.dashboard.panel',
      path: '/dashboard',
      actions: api.mini ? [] : [React__default.createElement(ConfigAction, {
        api: api
      })],
      icon: {
        type: 'dashboard',
        theme: 'filled'
      },
      component: function component() {
        return React__default.createElement(DashboardUI, {
          api: api
        });
      }
    });
  };

  return ui;
});
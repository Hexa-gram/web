"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _indexModule = _interopRequireDefault(require("./index.module.less"));

var _data = require("../../../data.d");

var _UIApiContext = _interopRequireDefault(require("../UIApiContext"));

var _TagSelect = _interopRequireDefault(require("../TagSelect"));

var _BlockItem = _interopRequireDefault(require("./BlockItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var BlockList = function BlockList(props) {
  var _props$list = props.list,
      list = _props$list === void 0 ? [] : _props$list,
      addingBlock = props.addingBlock,
      keyword = props.keyword,
      loading = props.loading;

  var _useContext = (0, _react.useContext)(_UIApiContext.default),
      api = _useContext.api;

  var intl = api.intl;
  var _api$_ = api._,
      uniq = _api$_.uniq,
      flatten = _api$_.flatten;
  var isMini = api.isMini();
  var pageSize = isMini ? 8 : 10;
  var tags = (0, _react.useMemo)(function () {
    return uniq(flatten(list.map(function (item) {
      return item.tags;
    })));
  }, [list]);

  var _useState = (0, _react.useState)(''),
      _useState2 = _slicedToArray(_useState, 2),
      selectedTag = _useState2[0],
      setSelectedTag = _useState2[1];

  var _useState3 = (0, _react.useState)(1),
      _useState4 = _slicedToArray(_useState3, 2),
      currentPage = _useState4[0],
      setCurrentPage = _useState4[1];

  (0, _react.useEffect)(function () {
    setSelectedTag('');
    setCurrentPage(1);
  }, [list]);
  /**
   * 筛选区块列表
   */

  var filteredList = (0, _react.useMemo)(function () {
    return list.filter(function (_ref) {
      var _ref$name = _ref.name,
          name = _ref$name === void 0 ? '' : _ref$name,
          url = _ref.url,
          _ref$description = _ref.description,
          description = _ref$description === void 0 ? '' : _ref$description,
          _ref$tags = _ref.tags,
          listTags = _ref$tags === void 0 ? [] : _ref$tags;
      return (!selectedTag || listTags.join('').includes(selectedTag)) && (!keyword || name.toLocaleLowerCase().includes(keyword) || description.toLocaleLowerCase().includes(keyword) || url.toLocaleLowerCase().includes(keyword));
    });
  }, [keyword, selectedTag, list.map(function (_ref2) {
    var url = _ref2.url;
    return url;
  }).join('/')]);
  /**
   * 当前的列表项目，区块分页就是在这里做
   */

  var currentPageList = (0, _react.useMemo)(function () {
    return filteredList.slice((currentPage - 1) * pageSize, currentPage * pageSize > filteredList.length ? filteredList.length : currentPage * pageSize);
  }, [filteredList, currentPage]);
  /**
   * 是不是数据为空
   */

  var isEmpty = !currentPageList || currentPageList.length === 0;
  var contents;

  if (loading) {
    contents = _react.default.createElement("div", {
      className: _indexModule.default.emptyWrapper
    }, _react.default.createElement(_antd.Spin, {
      size: "large"
    }));
  } else if (isEmpty) {
    // 切换为黑色背景图片
    contents = _react.default.createElement("div", {
      className: _indexModule.default.emptyWrapper
    }, _react.default.createElement(_antd.Empty, {
      imageStyle: {
        width: 64,
        height: 41,
        margin: '8px auto'
      },
      image: "https://gw.alipayobjects.com/mdn/rms_4f0d74/afts/img/A*LinHSLLEHUAAAAAAAAAAAABkARQnAQ",
      description: keyword ? intl({
        id: 'org.umi.ui.blocks.list.nofound'
      }) : intl({
        id: 'org.umi.ui.blocks.list.nodata'
      })
    }));
  } else {
    contents = _react.default.createElement("div", {
      style: {
        display: 'flex',
        height: '100%',
        flexDirection: 'column'
      }
    }, _react.default.createElement(_antd.Row, {
      gutter: 20,
      type: "flex"
    }, currentPageList.map(function (item) {
      return _react.default.createElement(_BlockItem.default, _extends({
        key: item.url,
        item: item
      }, props, {
        loading: addingBlock && item.url === addingBlock.url,
        disabled: addingBlock && addingBlock.url && item.url !== addingBlock.url
      }));
    })), filteredList.length > pageSize && _react.default.createElement(_antd.Row, {
      type: "flex",
      justify: "end"
    }, _react.default.createElement(_antd.Pagination, {
      size: isMini ? 'small' : undefined,
      current: currentPage,
      onChange: setCurrentPage,
      total: filteredList.length,
      pageSize: pageSize
    })));
  }

  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_TagSelect.default, {
    tagList: tags,
    allText: intl({
      id: 'org.umi.ui.blocks.tag.all'
    }),
    collapseText: intl({
      id: 'org.umi.ui.blocks.tag.collapse'
    }),
    expandText: intl({
      id: 'org.umi.ui.blocks.tag.expand'
    }),
    value: selectedTag,
    loading: loading,
    onChange: function onChange(tagValue) {
      return setSelectedTag(tagValue);
    }
  }), _react.default.createElement("div", {
    className: _indexModule.default.cardContainer
  }, contents));
};

var _default = BlockList;
exports.default = _default;